var pages = [{'name': 'class AtomicReference<T>(value: T)', 'description':'com.suparnatural.core.concurrency.AtomicReference', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-atomic-reference/index.html', 'searchKey':'AtomicReference'},
{'name': 'fun <T> AtomicReference(value: T)', 'description':'com.suparnatural.core.concurrency.AtomicReference.AtomicReference', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-atomic-reference/-atomic-reference.html', 'searchKey':'AtomicReference'},
{'name': 'fun compareAndSet(expected: T, new: T): Boolean', 'description':'com.suparnatural.core.concurrency.AtomicReference.compareAndSet', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-atomic-reference/compare-and-set.html', 'searchKey':'compareAndSet'},
{'name': 'class BackgroundWorker(worker: Worker) : Worker', 'description':'com.suparnatural.core.concurrency.BackgroundWorker', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-background-worker/index.html', 'searchKey':'BackgroundWorker'},
{'name': 'fun BackgroundWorker(worker: Worker)', 'description':'com.suparnatural.core.concurrency.BackgroundWorker.BackgroundWorker', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-background-worker/-background-worker.html', 'searchKey':'BackgroundWorker'},
{'name': 'open override fun <T, V> execute(jobInput: T, job: (T) -> V): Future<V>', 'description':'com.suparnatural.core.concurrency.BackgroundWorker.execute', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-background-worker/execute.html', 'searchKey':'execute'},
{'name': 'open fun <T, V> execute(jobInput: T, job: (T) -> V): <ERROR CLASS><V>', 'description':'com.suparnatural.core.concurrency.LooperWorker.execute', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-looper-worker/execute.html', 'searchKey':'execute'},
{'name': 'open override fun <T, V> execute(jobInput: T, job: (T) -> V): Future<V>', 'description':'com.suparnatural.core.concurrency.MainWorker.execute', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-main-worker/execute.html', 'searchKey':'execute'},
{'name': 'abstract fun <T, V> execute(jobInput: T, job: (T) -> V): Future<V>', 'description':'com.suparnatural.core.concurrency.Worker.execute', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-worker/execute.html', 'searchKey':'execute'},
{'name': 'open override fun <T, V, W> executeAndResume(jobInput: T, job: (T) -> V, resumingWorker: Worker, awaitResumingJob: Boolean, resumingJob: (V) -> W): Future<V>', 'description':'com.suparnatural.core.concurrency.BackgroundWorker.executeAndResume', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-background-worker/execute-and-resume.html', 'searchKey':'executeAndResume'},
{'name': 'open fun <T, V, W> executeAndResume(jobInput: T, job: (T) -> V, resumingWorker: <ERROR CLASS>, awaitResumingJob: Boolean, resumingJob: (V) -> W): <ERROR CLASS><V>', 'description':'com.suparnatural.core.concurrency.LooperWorker.executeAndResume', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-looper-worker/execute-and-resume.html', 'searchKey':'executeAndResume'},
{'name': 'open override fun <T, V, W> executeAndResume(jobInput: T, job: (T) -> V, resumingWorker: Worker, awaitResumingJob: Boolean, resumingJob: (V) -> W): Future<V>', 'description':'com.suparnatural.core.concurrency.MainWorker.executeAndResume', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-main-worker/execute-and-resume.html', 'searchKey':'executeAndResume'},
{'name': 'abstract fun <T, V, W> executeAndResume(jobInput: T, job: (T) -> V, resumingWorker: Worker, awaitResumingJob: Boolean, resumingJob: (V) -> W): Future<V>', 'description':'com.suparnatural.core.concurrency.Worker.executeAndResume', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-worker/execute-and-resume.html', 'searchKey':'executeAndResume'},
{'name': 'open override fun terminate(finishPendingTasks: Boolean): Future<Unit>', 'description':'com.suparnatural.core.concurrency.BackgroundWorker.terminate', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-background-worker/terminate.html', 'searchKey':'terminate'},
{'name': 'open fun terminate(finishPendingTasks: Boolean): <ERROR CLASS><Unit>', 'description':'com.suparnatural.core.concurrency.LooperWorker.terminate', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-looper-worker/terminate.html', 'searchKey':'terminate'},
{'name': 'open override fun terminate(finishPendingTasks: Boolean): Future<Unit>', 'description':'com.suparnatural.core.concurrency.MainWorker.terminate', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-main-worker/terminate.html', 'searchKey':'terminate'},
{'name': 'abstract fun terminate(finishPendingTasks: Boolean): Future<Unit>', 'description':'com.suparnatural.core.concurrency.Worker.terminate', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-worker/terminate.html', 'searchKey':'terminate'},
{'name': 'class DeferredFuture<T> : Future<T> ', 'description':'com.suparnatural.core.concurrency.DeferredFuture', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-deferred-future/index.html', 'searchKey':'DeferredFuture'},
{'name': 'fun DeferredFuture()', 'description':'com.suparnatural.core.concurrency.DeferredFuture.DeferredFuture', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-deferred-future/-deferred-future.html', 'searchKey':'DeferredFuture'},
{'name': 'open override fun await(): T', 'description':'com.suparnatural.core.concurrency.DeferredFuture.await', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-deferred-future/await.html', 'searchKey':'await'},
{'name': 'abstract fun await(): T', 'description':'com.suparnatural.core.concurrency.Future.await', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-future/await.html', 'searchKey':'await'},
{'name': 'open override fun await(): V', 'description':'com.suparnatural.core.concurrency.JobFuture.await', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-job-future/await.html', 'searchKey':'await'},
{'name': 'open override fun await(): T', 'description':'com.suparnatural.core.concurrency.NativeFuture.await', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-native-future/await.html', 'searchKey':'await'},
{'name': 'open override fun await(): T', 'description':'com.suparnatural.core.concurrency.ValueFuture.await', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-value-future/await.html', 'searchKey':'await'},
{'name': 'fun setValue(newValue: T)', 'description':'com.suparnatural.core.concurrency.DeferredFuture.setValue', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-deferred-future/set-value.html', 'searchKey':'setValue'},
{'name': 'operator fun setValue(thisRef: Any?, property: KProperty<*>, value: T)', 'description':'com.suparnatural.core.concurrency.Immutability.setValue', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-immutability/set-value.html', 'searchKey':'setValue'},
{'name': 'interface Future<T>', 'description':'com.suparnatural.core.concurrency.Future', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-future/index.html', 'searchKey':'Future'},
{'name': 'class Immutability<T>(initialValue: T)', 'description':'com.suparnatural.core.concurrency.Immutability', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-immutability/index.html', 'searchKey':'Immutability'},
{'name': 'fun <T> Immutability(initialValue: T)', 'description':'com.suparnatural.core.concurrency.Immutability.Immutability', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-immutability/-immutability.html', 'searchKey':'Immutability'},
{'name': 'operator fun getValue(thisRef: Any?, property: KProperty<*>): T', 'description':'com.suparnatural.core.concurrency.Immutability.getValue', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-immutability/get-value.html', 'searchKey':'getValue'},
{'name': 'class Job<Input, Output>', 'description':'com.suparnatural.core.concurrency.Job', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-job/index.html', 'searchKey':'Job'},
{'name': 'object Companion', 'description':'com.suparnatural.core.concurrency.Job.Companion', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-job/-companion/index.html', 'searchKey':'Companion'},
{'name': 'object Companion', 'description':'com.suparnatural.core.concurrency.ResumableJob.Companion', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-resumable-job/-companion/index.html', 'searchKey':'Companion'},
{'name': 'object Companion', 'description':'com.suparnatural.core.concurrency.WorkerFactory.Companion', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-worker-factory/-companion/index.html', 'searchKey':'Companion'},
{'name': 'fun <I, O> create(payload: I, job: (O) -> Unit): Job<I, O>', 'description':'com.suparnatural.core.concurrency.Job.Companion.create', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-job/-companion/create.html', 'searchKey':'create'},
{'name': 'fun <JobInput, ResultHandlerInput, ResultHandlerOutput> create(jobInput: JobInput, job: (JobInput) -> ResultHandlerInput, resumingWorker: Worker, awaitResumingJob: Boolean, resumingJob: (ResultHandlerInput) -> ResultHandlerOutput): ResumableJob<JobInput, ResultHandlerInput, ResultHandlerOutput>', 'description':'com.suparnatural.core.concurrency.ResumableJob.Companion.create', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-resumable-job/-companion/create.html', 'searchKey':'create'},
{'name': 'object JobDispatcher', 'description':'com.suparnatural.core.concurrency.JobDispatcher', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-job-dispatcher/index.html', 'searchKey':'JobDispatcher'},
{'name': 'fun <T, V> dispatchOnCurrentThread(jobInput: T, job: (T) -> V): Future<V>', 'description':'com.suparnatural.core.concurrency.JobDispatcher.dispatchOnCurrentThread', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-job-dispatcher/dispatch-on-current-thread.html', 'searchKey':'dispatchOnCurrentThread'},
{'name': 'fun <T, V> dispatchOnMainThread(jobInput: T, job: (T) -> V): Future<V>', 'description':'com.suparnatural.core.concurrency.JobDispatcher.dispatchOnMainThread', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-job-dispatcher/dispatch-on-main-thread.html', 'searchKey':'dispatchOnMainThread'},
{'name': 'fun <T, V> dispatchOnNewBackgroundThread(jobInput: T, job: (T) -> V): Future<V>', 'description':'com.suparnatural.core.concurrency.JobDispatcher.dispatchOnNewBackgroundThread', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-job-dispatcher/dispatch-on-new-background-thread.html', 'searchKey':'dispatchOnNewBackgroundThread'},
{'name': 'fun <T, V> dispatchOnWorker(worker: Worker, jobInput: T, job: (T) -> V): Future<V>', 'description':'com.suparnatural.core.concurrency.JobDispatcher.dispatchOnWorker', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-job-dispatcher/dispatch-on-worker.html', 'searchKey':'dispatchOnWorker'},
{'name': 'class JobFuture<T, V>(job: (T) -> V, jobInput: T) : Future<V> ', 'description':'com.suparnatural.core.concurrency.JobFuture', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-job-future/index.html', 'searchKey':'JobFuture'},
{'name': 'fun <T, V> JobFuture(job: (T) -> V, jobInput: T)', 'description':'com.suparnatural.core.concurrency.JobFuture.JobFuture', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-job-future/-job-future.html', 'searchKey':'JobFuture'},
{'name': 'class LooperWorker(looper: Looper)', 'description':'com.suparnatural.core.concurrency.LooperWorker', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-looper-worker/index.html', 'searchKey':'LooperWorker'},
{'name': 'fun LooperWorker(looper: Looper)', 'description':'com.suparnatural.core.concurrency.LooperWorker.LooperWorker', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-looper-worker/-looper-worker.html', 'searchKey':'LooperWorker'},
{'name': 'class MainWorker : Worker', 'description':'com.suparnatural.core.concurrency.MainWorker', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-main-worker/index.html', 'searchKey':'MainWorker'},
{'name': 'fun MainWorker()', 'description':'com.suparnatural.core.concurrency.MainWorker.MainWorker', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-main-worker/-main-worker.html', 'searchKey':'MainWorker'},
{'name': 'class MutexLock', 'description':'com.suparnatural.core.concurrency.MutexLock', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-mutex-lock/index.html', 'searchKey':'MutexLock'},
{'name': 'fun destroy()', 'description':'com.suparnatural.core.concurrency.MutexLock.destroy', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-mutex-lock/destroy.html', 'searchKey':'destroy'},
{'name': 'fun destroy()', 'description':'com.suparnatural.core.concurrency.ReadWriteLock.destroy', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-read-write-lock/destroy.html', 'searchKey':'destroy'},
{'name': 'fun lock()', 'description':'com.suparnatural.core.concurrency.MutexLock.lock', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-mutex-lock/lock.html', 'searchKey':'lock'},
{'name': 'fun tryLock(): Boolean', 'description':'com.suparnatural.core.concurrency.MutexLock.tryLock', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-mutex-lock/try-lock.html', 'searchKey':'tryLock'},
{'name': 'fun unlock()', 'description':'com.suparnatural.core.concurrency.MutexLock.unlock', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-mutex-lock/unlock.html', 'searchKey':'unlock'},
{'name': 'class NativeFuture<T> : Future<T> ', 'description':'com.suparnatural.core.concurrency.NativeFuture', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-native-future/index.html', 'searchKey':'NativeFuture'},
{'name': 'fun <T> NativeFuture(future: <ERROR CLASS><T>)', 'description':'com.suparnatural.core.concurrency.NativeFuture.NativeFuture', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-native-future/-native-future.html', 'searchKey':'NativeFuture'},
{'name': 'class ReadWriteLock', 'description':'com.suparnatural.core.concurrency.ReadWriteLock', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-read-write-lock/index.html', 'searchKey':'ReadWriteLock'},
{'name': 'fun acquireReadLock()', 'description':'com.suparnatural.core.concurrency.ReadWriteLock.acquireReadLock', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-read-write-lock/acquire-read-lock.html', 'searchKey':'acquireReadLock'},
{'name': 'fun acquireWriteLock()', 'description':'com.suparnatural.core.concurrency.ReadWriteLock.acquireWriteLock', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-read-write-lock/acquire-write-lock.html', 'searchKey':'acquireWriteLock'},
{'name': 'fun releaseReadLock()', 'description':'com.suparnatural.core.concurrency.ReadWriteLock.releaseReadLock', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-read-write-lock/release-read-lock.html', 'searchKey':'releaseReadLock'},
{'name': 'fun releaseWriteLock()', 'description':'com.suparnatural.core.concurrency.ReadWriteLock.releaseWriteLock', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-read-write-lock/release-write-lock.html', 'searchKey':'releaseWriteLock'},
{'name': 'class ResumableJob<JobInput, ResultHandlerInput, ResultHandlerOutput>', 'description':'com.suparnatural.core.concurrency.ResumableJob', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-resumable-job/index.html', 'searchKey':'ResumableJob'},
{'name': 'class ValueFuture<T>(result: T) : Future<T> ', 'description':'com.suparnatural.core.concurrency.ValueFuture', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-value-future/index.html', 'searchKey':'ValueFuture'},
{'name': 'fun <T> ValueFuture(result: T)', 'description':'com.suparnatural.core.concurrency.ValueFuture.ValueFuture', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-value-future/-value-future.html', 'searchKey':'ValueFuture'},
{'name': 'interface Worker', 'description':'com.suparnatural.core.concurrency.Worker', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-worker/index.html', 'searchKey':'Worker'},
{'name': 'class WorkerFactory', 'description':'com.suparnatural.core.concurrency.WorkerFactory', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-worker-factory/index.html', 'searchKey':'WorkerFactory'},
{'name': 'fun WorkerFactory()', 'description':'com.suparnatural.core.concurrency.WorkerFactory.WorkerFactory', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-worker-factory/-worker-factory.html', 'searchKey':'WorkerFactory'},
{'name': 'fun newBackgroundWorker(): Worker', 'description':'com.suparnatural.core.concurrency.WorkerFactory.Companion.newBackgroundWorker', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/-worker-factory/-companion/new-background-worker.html', 'searchKey':'newBackgroundWorker'},
{'name': 'fun isMainThread(): Boolean', 'description':'com.suparnatural.core.concurrency.isMainThread', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/is-main-thread.html', 'searchKey':'isMainThread'},
{'name': 'fun <T> T.toImmutable(): T', 'description':'com.suparnatural.core.concurrency.toImmutable', 'location':'suparnatural-concurrency/com.suparnatural.core.concurrency/to-immutable.html', 'searchKey':'toImmutable'}]
